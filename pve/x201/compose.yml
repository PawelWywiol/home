services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:2.30.0-alpine
    ports:
      - 9443:9443
    volumes:
      - ${PWD}/docker/data/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:2025.4.2
    command: tunnel run
    env_file: .env
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_API_TUNNEL_TOKEN}
    restart: unless-stopped

  caddy:
    build:
      context: .
      dockerfile: Caddy.Dockerfile
    container_name: caddy
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - ACME_AGREE=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${PWD}/docker/data/caddy/config:/config
      - ${PWD}/docker/data/caddy/data:/data
      - ${PWD}/docker/config/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${PWD}/docker/config/caddy/index.html:/usr/share/caddy/index.html

  pihole:
    container_name: pihole
    image: pihole/pihole:2025.04.0
    env_file: .env
    environment:
      TZ: ${TZ}
      FTLCONF_webserver_api_password: ${PIHOLE_WEBSERVER_API_PASSWORD}
      FTLCONF_dns_listeningMode: ${PIHOLE_DNS_LISTENING_MODE}
      # FTLCONF_dns_upstreams: ${PIHOLE_DNS_UPSTREAMS}
    volumes:
      - ${PWD}/docker/data/pihole/:/etc/pihole/
      - ${PWD}/docker/data/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 5080:80/tcp
      - 5443:443/tcp
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
      - CAP_SYS_NICE
    restart: unless-stopped
    depends_on:
      - cloudflared

  beszel-agent:
    image: henrygd/beszel-agent:0.11.1
    container_name: beszel-agent
    restart: unless-stopped
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # monitor other disks / partitions by mounting a folder in /extra-filesystems
      # - /mnt/disk/.beszel:/extra-filesystems/sda1:ro
    environment:
      # PORT: ${BESZEL_PORT}
      LISTEN: ${BESZEL_LISTEN}
      KEY: ${BESZEL_KEY}
