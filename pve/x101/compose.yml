services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/docker/portainer/data:/data
    restart: unless-stopped

  caddy:
    container_name: caddy
    build:
      context: .
      dockerfile: Caddy.Dockerfile
    env_file:
      - .env
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - ACME_AGREE=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${PWD}/docker/caddy/config:/config
      - ${PWD}/docker/caddy/data:/data
      - ${PWD}/docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${PWD}/docker/caddy/index.html:/usr/share/caddy/index.html
      - ${PWD}/xk6/dashboards:/usr/share/caddy/xk6/dashboards
    restart: unless-stopped

  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth:latest
    network_mode: 'none'
    env_file: .env
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun:latest
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8080:8080 # qbittorrent web interface
      - 6881:6881 # qbittorrent torrent port
      - 6881:6881/udp
      - 3000:3000
      - 3001:3001
    volumes:
      - ${PWD}/docker/gluetun:/gluetun
    env_file: .env
    environment:
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      - SERVER_CITIES=${SERVER_CITIES}
      - HEALTH_VPN_DURATION_INITIAL=${HEALTH_VPN_DURATION_INITIAL}
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 60s
      timeout: 20s
      retries: 5
    restart: unless-stopped

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    ports:
      - 8086:8086
    env_file: .env
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE}
      - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - ${PWD}/docker/influxdb/data:/var/lib/influxdb2
      - ${PWD}/docker/influxdb/config:/etc/influxdb2
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    env_file: .env
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ${PWD}/docker/grafana/provisioning:/etc/grafana/provisioning/
    restart: unless-stopped

  wakapi:
    container_name: wakapi
    image: ghcr.io/muety/wakapi:latest
    ports:
      - 3001:3000
    environment:
      WAKAPI_PASSWORD_SALT: ${WAKAPI_PASSWORD_SALT}
      WAKAPI_EXPOSE_METRICS: ${WAKAPI_EXPOSE_METRICS}
    volumes:
      - ${PWD}/docker/wakapi/data:/data
    restart: unless-stopped

  chromium:
    container_name: chromium
    image: lscr.io/linuxserver/chromium:latest
    network_mode: service:gluetun
    security_opt:
      - seccomp:unconfined #optional
    env_file: .env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ${PWD}/docker/chromium/config:/config
    # ports:
    #   - 3000:3000
    #   - 3001:3001
    shm_size: '1gb'
    restart: unless-stopped
