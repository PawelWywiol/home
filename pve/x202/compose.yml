x-glitchtip-environment: &glitchtip-environment
  DATABASE_URL: ${GLITCHTIP_DATABASE_URL}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  SECRET_KEY: ${GLITCHTIP_SECRET_KEY}
  PORT: ${GLITCHTIP_PORT}
  EMAIL_URL: ${GLITCHTIP_EMAIL_URL}
  GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
  DEFAULT_FROM_EMAIL: ${GLITCHTIP_DEFAULT_FROM_EMAIL}
  CELERY_WORKER_AUTOSCALE: ${GLITCHTIP_CELERY_WORKER_AUTOSCALE}
  CELERY_WORKER_MAX_TASKS_PER_CHILD: ${GLITCHTIP_CELERY_WORKER_MAX_TASKS_PER_CHILD}
  CSP_DEFAULT_SRC: ${GLITCHTIP_CSP_DEFAULT_SRC}

x-glitchtip-depends_on: &glitchtip-depends_on
  - postgres
  - redis

services:
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/docker/data/portainer/data:/data
    restart: unless-stopped

  caddy:
    container_name: caddy
    build:
      context: .
      dockerfile: Caddy.Dockerfile
    env_file:
      - .env
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - ACME_AGREE=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${PWD}/docker/data/caddy/config:/config
      - ${PWD}/docker/data/caddy/data:/data
      - ${PWD}/docker/config/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${PWD}/docker/config/caddy/index.html:/usr/share/caddy/index.html
      - ${PWD}/docker/data/k6/dashboards:/usr/share/caddy/k6/dashboards
    restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file: .env
    restart: unless-stopped
    volumes:
      - ${PWD}/docker/data/postgresql/data:/var/lib/postgresql/data

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    ports:
      - 8086:8086
    env_file: .env
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - DOCKER_INFLUXDB_INIT_MODE=${INFLUXDB_INIT_MODE}
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - ${PWD}/docker/data/influxdb/data:/var/lib/influxdb2
      - ${PWD}/docker/data/influxdb/config:/etc/influxdb2
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - 3002:3000
    env_file: .env
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=${GRAFANA_AUTH_ANONYMOUS_ORG_ROLE}
      - GF_AUTH_ANONYMOUS_ENABLED=${GRAFANA_AUTH_ANONYMOUS_ENABLED}
      - GF_AUTH_BASIC_ENABLED=${GRAFANA_AUTH_BASIC_ENABLED}
      - GF_SERVER_SERVE_FROM_SUB_PATH=${GRAFANA_SERVER_SERVE_FROM_SUB_PATH}
    volumes:
      - ${PWD}/docker/data/grafana/provisioning:/etc/grafana/provisioning/
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis/redis-stack:latest
    restart: unless-stopped
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - ${PWD}/docker/data/redis/data:/data

  wakapi:
    container_name: wakapi
    image: ghcr.io/muety/wakapi:latest
    ports:
      - 3003:3000
    environment:
      WAKAPI_PASSWORD_SALT: ${WAKAPI_PASSWORD_SALT}
      WAKAPI_EXPOSE_METRICS: ${WAKAPI_EXPOSE_METRICS}
    volumes:
      - ${PWD}/docker/data/wakapi/data:/data
    restart: unless-stopped

  glitchtip-web:
    container_name: glitchtip-web
    image: glitchtip/glitchtip:latest
    depends_on: *glitchtip-depends_on
    ports:
      - 8000:8000
    env_file: .env
    environment: *glitchtip-environment
    volumes:
      - ${PWD}/docker/data/glitchtip/uploads:/code/uploads
    restart: unless-stopped

  glitchtip-worker:
    container_name: glitchtip-worker
    image: glitchtip/glitchtip:latest
    command: ./bin/run-celery-with-beat.sh
    depends_on: *glitchtip-depends_on
    env_file: .env
    environment: *glitchtip-environment
    volumes:
      - ${PWD}/docker/data/glitchtip/uploads:/code/uploads
    restart: unless-stopped

  glitchtip-migrate:
    container_name: glitchtip-migrate
    image: glitchtip/glitchtip:latest
    command: ./bin/run-migrate.sh
    depends_on: *glitchtip-depends_on
    env_file: .env
    environment: *glitchtip-environment
